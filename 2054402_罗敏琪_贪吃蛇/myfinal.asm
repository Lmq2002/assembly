;GPU PROP BYTE:
; 7    6  5  4  3  2  1  0
; BL   R  G  B  I  R  G  B
;  |   \_____/  |  \_____/
; 闪烁   背景  高亮  前景

;游戏画布 25x25
;蛇大小上线 23格

DATA SEGMENT
	SCORE DW 0		;game 得分
	SCPRE DB 'SOCRE: '	;[7] 分数提示长度
	DEAD DB 'GAME OVER!'	;[10] 结束提示长度
	FOOD DW 0		;食物坐标 x|y
	SDCT DB 0		;蛇方向，0001UP，0010DOWN，0100LEFT，1000RIGHT
	SLEN DB 0		;蛇长度
	BODY DW 529 DUP(0)	;蛇身体位置X|Y
DATA ENDS

STACK SEGMENT
	DW 20 DUP(0)
STACK ENDS

CODE SEGMENT
ASSUME CS:CODE, DS:DATA, SS:STACK
START:
	MOV AX, DATA
	MOV DS, AX		;初始化DATA SEGMENT
	
	MOV AX, 0B800H
	MOV ES, AX		;写显存，8086汇编语言里面0B800H是指单显缓存的段地址。	

	MOV AX, STACK
	MOV SS, AX
	MOV SP, 20		;初始化栈

	CALL CLEAR		;清理屏幕
	
	MOV AH, 24		;18H
	MOV AL, 24
	PUSH AX
	CALL DRAW_MAP		;地图边界

	CALL CREATE_SNAKE	;初始化蛇
	CALL DRAW_SNAKE	;把蛇放到屏幕上

	CALL CREATE_FOOD	;初始化食物位置
	CALL DRAW_FOOD		;把食物放到屏幕上

	CALL START_GAME		;游戏进行
	CALL SHOW_SCORE	;游戏结束，显示分数

	MOV AH,4CH
	INT 21H

GAME_OVER:
	PUSH AX
	PUSH CX
	PUSH SI

	MOV SI, 30
	MOV CX,10
GO0:
	MOV AX,SI
	MOV AH,AL
	MOV AL,12
	PUSH AX
	MOV AH,00000111B
	MOV AL,DEAD[SI-30]
	PUSH AX
	CALL DRAW_CHAR
	INC SI
LOOP GO0

	POP SI
	POP CX
	POP AX
RET

END_GAME:
	CALL GAME_OVER
	mov ax, 4c00h
  	int 21h

SLEEP:
	PUSH CX
	MOV CX,50000
S0:
	PUSH CX
	MOV CX,20
S1:
	LOOP S1
	
	POP CX
	LOOP S0
	POP CX
RET

SHOW_SCORE:
	PUSH AX
	PUSH BX
	PUSH SI

	MOV SI,30
	MOV CX,7
PO0:
	MOV AX,SI
	MOV AH,AL	;X30
	MOV AL,2	;Y2
	PUSH AX
	MOV AH,00000111B
	MOV AL,SCPRE[SI-30]
	PUSH AX
	CALL DRAW_CHAR
	INC SI
	LOOP PO0
	
	MOV SI,0
	MOV AX,SCORE
SL0:			;压栈数字
	MOV BH,0
	MOV BL,10
	DIV BL
	MOV BX,AX	;AL商,AH余
	MOV BL,BH
	MOV BH,0
	PUSH BX
	INC SI		;计数
	CMP AL,0
	JE SE0
	MOV AH,0
	JMP SL0
SE0:
	MOV CX,SI
	MOV SI,38	;X
SN0:
	POP BX
	ADD BX,30H
	MOV AX,SI
	MOV AH,AL
	MOV AL,2
	PUSH AX
	MOV AH,00000111B
	MOV AL,BL
	PUSH AX
	CALL DRAW_CHAR
	INC SI
LOOP SN0
	POP SI
	POP BX
	POP AX
RET
	
	

ADD_BODY:			;增长身体，增加食物
	PUSH AX
	PUSH SI

	MOV AH,0
	MOV AL,SLEN
	INC AL
	MOV SLEN,AL
	
	MOV SI,AX
	ADD SI,SI

	MOV AX,BODY[SI-4]
	MOV BODY[SI-2],AX	;新的尾巴

	INC SCORE
	CALL CREATE_FOOD
	CALL DRAW_FOOD
	
	POP SI
	POP AX
RET

IS_EAT:
	PUSH AX
	
	MOV AX,FOOD
	CMP AX,BODY[0]
	JNE NT0
	CALL ADD_BODY
NT0:
	POP AX
RET

IS_DEAD:		;判断游戏是否结束
	PUSH AX
	PUSH CX
	PUSH SI

	MOV AX,BODY[0]		;蛇头位置	,判断撞墙
	CMP AH,0
	JE END_GAME
	CMP AH,24
	JE END_GAME
	CMP AL,0
	JE END_GAME
	CMP AL,24
	JE END_GAME
	
	MOV CH,0		;判断撞身体
	MOV CL,SLEN
	DEC CX
	MOV SI,2		;循环判断
ID0:
	MOV AX,BODY[SI]
	CMP BODY[0],AX
	JE END_GAME
	ADD SI,2
	LOOP ID0

	POP SI
	POP CX
	POP AX
RET

	
	

MOVE_SNAKE:	;数组值向后移,设置蛇头位置
	PUSH AX
	PUSH CX
	PUSH SI

	MOV CH,0
	MOV CL,SLEN
	DEC CX			;循环次数

	MOV AH,0
	MOV AL,SLEN
	MOV SI,AX
	ADD SI,SI			;BODY下标
MS0:
	MOV AX,BODY[SI-4]
	MOV BODY[SI-2],AX
	SUB SI,2
	LOOP MS0

	MOV AX,BODY[0]		;原来蛇头位置
		
	CMP SDCT,0001B		;UP
	JE UP
	CMP SDCT,0010B
	JE DOWN
	CMP SDCT,0100B
	JE LEFT
	CMP SDCT,1000B
	JE RIGHT
UP:
	DEC AL			;Y-1
	JMP UOK			;取消SHORT
DOWN:
	INC AL
	JMP UOK
LEFT:
	DEC AH
	JMP UOK
RIGHT:
	INC AH
	JMP UOK
UOK:	
	MOV BODY[0],AX
	POP SI
	POP CX
	POP AX
RET
	
	

CLEAR_LAST:	;尾巴
	PUSH AX
	PUSH SI

	MOV AH,0
	MOV AL,SLEN
	MOV SI,AX
	ADD SI,SI			;下标,要*2，因为大小是DW

	MOV AX,BODY[SI-2]
	PUSH AX
	MOV AH,00000000B
	MOV AL,' '
	PUSH AX
	CALL DRAW_CHAR

	POP SI
	POP AX
RET	
	

LISTEN_KEY:
	PUSH AX
	
	MOV AH,1	;缓冲区是否有内容->AX
	MOV AL,0
	INT 16H		;键盘IO中断
	CMP AH,1	;也可以是ZF=0有内容
	JE LK0		

	MOV AX,0
	INT 16H		;读入字符输入寄存器
	CMP AX, 4800H	;UP
	JE KUP
	
	CMP AX,5000H	;DOWN
	JE KDOWN

	CMP AX,4B00H	;LEFT
	JE KLEFT
	
	CMP AX,4D00H	;RIGHT
	JE KRIGHT
	
	JMP LK0

KRIGHT:
	CMP SDCT,0100B
	JE LK0
	MOV SDCT,1000B
	JMP LK0

KLEFT:
	CMP SDCT,1000B
	JE LK0
	MOV SDCT,0100B
	JMP LK0

KDOWN:
	CMP SDCT, 0001B
	JE LK0
	MOV SDCT,0010B
	JMP LK0

KUP:
	CMP SDCT, 0010B	;原来是DOWN,什么也不做
	JE LK0
	MOV SDCT, 0001B
	JMP LK0		;取消SHORT 

LK0:
	POP AX
RET


START_GAME:
	MOV CX,50
SG0:
	CALL LISTEN_KEY		;等待键入
	CALL CLEAR_LAST		;更新尾巴
	CALL MOVE_SNAKE
	CALL IS_DEAD
	CALL DRAW_SNAKE
	CALL IS_EAT
	CALL SHOW_SCORE
	CALL SLEEP
	LOOP SG0
RET

DRAW_FOOD:
	PUSH AX
	MOV AX,FOOD
	PUSH AX			;X|Y
	
	MOV AH,00101000B	;字符属性
	MOV AL,' '		;字符ASCII
	PUSH AX
	CALL DRAW_CHAR

	POP AX
RET

RAND:
	PUSH BP
	MOV BP,SP
	PUSH AX

	MOV AX,0H
	OUT 43H,AL		;System Timer 8253  Count Reg, Channel 0 System timer
	
	IN AL,40H
	;IN AL,40H
	;IN AL,40H
	
	MOV BX,[BP+4]		;23
	DIV BL			;AL商，AH余

	MOV DH,0
	MOV DL,AH		;返回参数

	POP AX
	POP BP
RET 2

CREATE_FOOD:	;初始化食物
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
RE0:
	MOV BX, 23

	PUSH BX			;除数
	CALL RAND		;返回DX随机
	INC DX			;不能是边界
	MOV AH,DL		;X

	PUSH BX
	CALL RAND
	INC DX
	MOV AL,DL		;Y

	MOV CH,0
	MOV CL,SLEN		;循环次数，检查食物位置合法性
	MOV SI,0			;BODY下标
SB0:
	CMP AX,BODY[SI]		;食物不应该和身体在一个方块上
	JE RE0
	ADD SI, 2
LOOP SB0
	
	MOV FOOD,AX		;FOOD X|Y

	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
RET

DRAW_SNAKE:
	PUSH CX
	PUSH SI
	PUSH AX

	MOV CH,0
	MOV CL,SLEN		;蛇长度，即画方块次数
	MOV SI,0			;身体下标

DS0:
	MOV AX, BODY[SI]
	PUSH AX
	MOV AH,0111000B		;方块属性
	MOV AL,' ' 		;方块ASCII
	PUSH AX
	CALL DRAW_CHAR
	ADD SI, 2
LOOP DS0
	
	POP AX
	POP SI
	POP CX
RET

CREATE_SNAKE:
	PUSH CX
	PUSH SI
 	PUSH AX

	MOV SDCT,1000B		;蛇行动方向
	MOV AH,1
	MOV AL,1

	MOV SLEN,2		;蛇初始长度
	MOV CH,0
	MOV CL,SLEN
	MOV SI,0
	MOV AH,6
	MOV AL,4		;X|Y=0604H,6行4列

C0:	;CX=2	
	MOV BODY[SI],AX

	DEC AH			;后退一列
	ADD SI,2			;DW大小
	LOOP C0

	POP AX
	POP SI
	POP CX
RET

DRAW_MAP:
	PUSH BP
	MOV BP, SP

	PUSH CX
	PUSH AX
	PUSH BX
	PUSH DX
	
	MOV DX, [BP+4]		;1818H,宽度

	MOV AX, 0
	MOV CH, 0
	MOV CL, DH		;设置宽度,循环
	INC CL			;宽度25

D0:
	MOV BH, AL		;TOP,X
	MOV BL, 0		;Y
	PUSH BX
	MOV BH, 00010000B	;字符属性
	MOV BL, ' '
	PUSH BX			;字符ASCII
	CALL DRAW_CHAR
	
	MOV BH, AL		;BOTTOM，X
	MOV BL, DL		;Y
	PUSH BX
	MOV BH, 00010000B	;字符属性
	MOV BL, ' '		;字符ASCII
	PUSH BX
	CALL DRAW_CHAR	
	
	INC AL
LOOP D0				;重复25次

	MOV CL, DL		;高度，循环次数设置	
	DEC CL
	MOV AL,1		;控制Y

D1:
	MOV BH,0		;LEFT,X
	MOV BL, AL		;Y
	PUSH BX			;位置
	MOV BH,00010000B	;字符属性
	MOV BL, ' '		;字符ASCII
	PUSH BX			;显示信息
	CALL DRAW_CHAR

	MOV BH, DH		;RIGHT,X
	MOV BL, AL		;Y
	PUSH BX
	MOV BH,00010000B
	MOV BL,' '
	PUSH BX
	CALL  DRAW_CHAR

	INC AL
LOOP D1

	POP DX
	POP BX
	POP AX
	POP CX

	POP BP			;恢复栈
RET 2				;栈平衡

DRAW_CHAR:			;画方块
	PUSH BP
	MOV BP,SP

	PUSH AX
	PUSH BX
	PUSH SI

	MOV BX, [BP+6]		;字符位置X|Y
	MOV AH,0
	MOV AL, 0A0H
	MUL BL			;Y*160+2X
	
	MOV BL,BH
	MOV BH, 0
	ADD BL, BL
	ADD BL,BL
	ADD AX, BX

	MOV SI, AX
	MOV AX,[BP+4]
	MOV ES:[SI], AX		;字符显示

	CMP AL,' '
	JNE JM0
	MOV ES:[SI+2], AX
JM0:
	POP SI
	POP BX
	POP AX
	POP BP			;寄存器恢复
RET 4


CLEAR:	;清屏
	MOV AX, 3H		;AX=0003，字符模式80*25下调用
	INT 10H
RET


CODE ENDS
END START